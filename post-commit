#!/bin/bash

REMOTES=$(git remote show)

unset GIT_DIR

DWL_URL="https://github.com/taishingi/continuous-template"
RELEASE="0.0.6"
PROVIDER=""
USERNAME=""
REPOSITORY=""
DIR="continuous"
REAL_DIR=$(realpath .)

Reset='\033[0m'           # Text Reset
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
White='\033[0;37m'        # White

# Bold
function scripts()
{
    toml=$(fd '^Cargo.toml$')
    dub=$(fd '^dub.json$')
    go=$(fd '^go.mod$')
    
    if [ ! -z "${dub}" ]
    then
        cd "${REAL_DIR}/${DIR}/d" || exit 1
        ./scripts-gen "${1}" "${2}" "${3}" || exit 1
    elif [ ! -z "${toml}" ]
    then
        cd "${REAL_DIR}/${DIR}/rust" || exit 1
        ./scripts-gen "${1}" "${2}" "${3}" || exit 1
    elif [ ! -z "${go}" ]
    then
        cd "${REAL_DIR}/${DIR}/go" || exit 1
        ./scripts-gen "${1}" "${2}" "${3}" || exit 1
    else
        exit 1
    fi
}

function ask()
{
    
    PROVIDER=""
    USERNAME=""
    REPOSITORY=""
    
    while [ -z "${PROVIDER}" ]
    do
        echo -e -n "${Blue}Please enter your provider ${White}[${Blue}github.com${White}|${Blue}gitlab.com${White}|${Blue}bitbucket.org${White}] : "
        read -r PROVIDER
    done
    
    echo -e "${Yellow}Checking provider...${Reset}"
    
    case ${PROVIDER} in
        "github.com"|"gitlab.com"|"bitbucket.org")
            echo -e "${White}[ ${Green}OK${White} ] ${PROVIDER}${Reset}"
        ;;
        
        *)
            ask
        ;;
    esac
    while [ -z "${USERNAME}" ]
    do
        echo -e -n "${Blue}Enter your ${White}username${White} : "
        read -r USERNAME
        
    done
    
    while [ -z "${REPOSITORY}" ]
    do
        echo -e -n "${Blue}Enter the name of your${White} repository${White} : "
        read -r REPOSITORY
    done
    
    URL="https://${PROVIDER}/${USERNAME}/${REPOSITORY}"
    if wget --spider "${URL}" 2>/dev/null
    then
        scripts "${PROVIDER}" "${USERNAME}" "${REPOSITORY}"
    else
        scripts "${PROVIDER}" "${USERNAME}" "${REPOSITORY}"
        echo -e "${White}[${Yellow} Warning${White} ] The repository not exists at the url : ${URL}"
    fi
}

function download() {
    
    if [ -d ".repo" ]
    then
        rm -rf .repo
    fi
    
    git clone --quiet ${DWL_URL} .repo && cd .repo  && git fetch --all --tags  && git checkout -b "${USER}" ${RELEASE} && git range-diff 0.0.5...0.0.6 && cd .. || exit 1
    
    if [ -d "${DIR}" ]
    then
        rm -rf "${DIR}"
    fi
    mv .repo "${DIR}"
}

function main() {
    
    files=$(ls .)
    toml=$(fd -e toml)
    dub=$(fd '^dub.json$')
    go=$(fd '^go.mod$')
    
    if [[ -z "${files}" ]]
    then
        echo -e "${White}[${Red} KO ${White}] No files are founded${Reset}"
        exit 1
    fi
    
    if [ -d "${DIR}" ]
    then
        if [ ! -z "${toml}" ]
        then
            send
            cd continuous/rust || exit 1
            packer validate . || exit 1
            packer build . || exit 1
        elif [ ! -z "${dub}" ]
        then
            send
            cd continuous/d || exit 1
            packer validate . || exit 1
            packer build . || exit 1
        elif [ ! -z "${go}" ]
        then
            send
            cd continuous/go || exit 1
            packer validate . || exit 1
            packer build . || exit 1
        fi
    else
        download
        ask
    fi
    if [ -x "/usr/bin/gh" ]
    then
        clear
        cd "${REAL_DIR}" || exit 1
        gh repo view
        echo
    fi
    echo -e "${Reset}"
    exit 0
}

function send()
{
    if [ -d "${DIR}" ];then
        
        for r in "${REMOTES[@]}";do
            git push "${r}" --all
            git push "${r}" --tags
        done
    fi
}

main
